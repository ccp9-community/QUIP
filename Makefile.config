# H0 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# H0 X
# H0 X   libAtoms+QUIP: atomistic simulation library
# H0 X
# H0 X   Portions of this code were written by
# H0 X     Albert Bartok-Partay, Silvia Cereda, Gabor Csanyi, James Kermode,
# H0 X     Ivan Solt, Wojciech Szlachta, Csilla Varnai, Steven Winfield.
# H0 X
# H0 X   Copyright 2006-2010.
# H0 X
# H0 X   These portions of the source code are released under the GNU General
# H0 X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# H0 X
# H0 X   If you would like to license the source code under different terms,
# H0 X   please contact Gabor Csanyi, gabor@csanyi.net
# H0 X
# H0 X   Portions of this code were written by Noam Bernstein as part of
# H0 X   his employment for the U.S. Government, and are not subject
# H0 X   to copyright in the USA.
# H0 X
# H0 X
# H0 X   When using this software, please cite the following reference:
# H0 X
# H0 X   http://www.libatoms.org
# H0 X
# H0 X  Additional contributions by
# H0 X    Alessio Comisso, Chiara Gattinoni, and Gianpietro Moras
# H0 X
# H0 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


SHELL := /bin/bash


config: ${BUILDDIR} arch
ifneq (${shell [ -f ${BUILDDIR}/Makefile.inc ] && echo 1 || echo 0},1)
	@echo "# Place to override setting elsewhere, in particular things set in Makefile.${QUIP_ARCH}" > ${BUILDDIR}/Makefile.inc
	@echo "# look in ${QUIP_ROOT}/Makefiles/Makefile.${QUIP_ARCH} for defaults set by arch" >> ${BUILDDIR}/Makefile.inc
	@echo "# OPTIM=" >> ${BUILDDIR}/Makefile.inc
	@echo "# COPTIM=" >> ${BUILDDIR}/Makefile.inc
	@echo "# DEBUG=${DEBUG}" >> ${BUILDDIR}/Makefile.inc
ifdef SAMPLE_DEBUG
	@echo "# DEBUG=${SAMPLE_DEBUG}" >> ${BUILDDIR}/Makefile.inc
endif
	@echo "# CDEBUG=" >> ${BUILDDIR}/Makefile.inc
endif
	@echo
	@echo "In the following, hit enter to accept the defaults."
	@echo
ifndef MATH_LINKOPTS
	@echo
	@echo "Please enter the linking options for LAPACK and BLAS libraries:"
	@echo "   Default: ${DEFAULT_MATH_LINKOPTS}"
	@read MATH_LINKOPTS && if [[ $$MATH_LINKOPTS == "" ]] ; then \
	  echo "MATH_LINKOPTS=${DEFAULT_MATH_LINKOPTS}" >> ${BUILDDIR}/Makefile.inc ; \
	  else echo "MATH_LINKOPTS=$$MATH_LINKOPTS" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef FOX_LIBDIR
	@echo
	@echo "Please enter directory where FoX libraries are kept:"
	@echo "   Default: use included version ${FOX}"
	@read FOX_LIBDIR && if [[ $$FOX_LIBDIR ]] ; then \
	  echo "FOX_LIBDIR=$$FOX_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where FoX include files are kept:" ; \
	  read FOX_INCDIR && echo "FOX_INCDIR=$$FOX_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_EXTERNAL_FOX=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else echo "FOX_LIBDIR="'$${QUIP_ROOT}'"/FoX-4.0.3/objs."'$${QUIP_ARCH}'"/lib" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "FOX_INCDIR="'$${QUIP_ROOT}'"/FoX-4.0.3/objs."'$${QUIP_ARCH}'"/finclude" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_EXTERNAL_FOX=0" >> ${BUILDDIR}/Makefile.inc ; fi
else
   ifneq (${shell [ -d $$(dirname $$(dirname ${FOX_LIBDIR})) ] && echo 1 || echo 0},1)
	@echo "FoX not found in directory ${FOX_LIBDIR}"
	@echo "Please enter directory where FoX libraries are kept:"
	@echo "   Default: use included version ${FOX}"
	@read FOX_LIBDIR && if [[ $$FOX_LIBDIR ]] ; then \
	  echo "FOX_LIBDIR=$$FOX_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where FoX include files are kept:" ; \
	  read FOX_INCDIR && echo "FOX_INCDIR=$$FOX_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_EXTERNAL_FOX=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else echo "FOX_LIBDIR="'$${QUIP_ROOT}'"/FoX-4.0.3/objs.$${QUIP_ARCH}/lib" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "FOX_INCDIR="'$${QUIP_ROOT}'"/FoX-4.0.3/objs.$${QUIP_ARCH}/finclude" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_EXTERNAL_FOX=0" >> ${BUILDDIR}/Makefile.inc ; fi
   endif
endif
ifndef HAVE_NETCDF
	@echo
	@echo "Please enter directories where NetCDF (and optionally HDF5, if you have NetCDF4) libraries are kept:"
	@echo "   Default: no NetCDF present"
	@read NETCDF_LIBDIR && if [[ $$NETCDF_LIBDIR ]] ; then \
	  echo "NETCDF_LIBDIR=$$NETCDF_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  found_libnetcdf=0; \
	  for draw in $$NETCDF_LIBDIR; do \
	    echo "checking d $$draw"; \
	    eval d=$$draw; \
	    if [ -f $$d/libnetcdf.a ]; then \
	      found_libnetcdf=1; \
	      if nm $$d/libnetcdf.a | grep -q deflate; then \
	       echo "NetCDF version 4 found." ; \
	       echo "NETCDF4=1" >> ${BUILDDIR}/Makefile.inc ; \
	      else echo "NetCDF older than version 4 found." ; \
	       echo "NETCDF4=0" >> ${BUILDDIR}/Makefile.inc; \
	      fi; \
	      if nm $$d/libnetcdf.a | grep -q curl; then \
		echo "NetCDF4 requires libcurl."; \
		echo "NETCDF4_CURL=1" >> ${BUILDDIR}/Makefile.inc; \
	      fi; \
	      break; \
	    fi; \
	  done; \
	  if [ $$found_libnetcdf == 0 ]; then \
	    echo "No libnetcdf.a found in $$NETCDF_LIBDIR"; \
	    exit 1; \
	  fi; \
	  echo "Please enter directory(ies) where NetCDF (and optionally HDF5, if you have NetCDF4) include files are kept:" ; \
	  read NETCDF_INCDIR && echo "NETCDF_INCDIR=$$NETCDF_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_NETCDF=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_NETCDF=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif
ifndef USE_MAKEDEP
	@echo
	@echo "Do you want to use makedep? [y/n]"
	@echo "   Default: y"
	@read USE_MAKEDEP_Q && if [[ $$USE_MAKEDEP_Q == 'n' ]]; then \
	  echo "USE_MAKEDEP=0" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "USE_MAKEDEP=1" >> ${BUILDDIR}/Makefile.inc; \
	  echo "MAKEDEP=makedep.py" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_MDCORE
	@echo
	@echo "Do you want to compile with MDCORE Potential support? [y/n]"
	@echo "   Default: n"
	@read HAVE_MDCORE_Q && if [[ $$HAVE_MDCORE_Q == 'y' ]]; then \
	  echo "HAVE_MDCORE=1" >> ${BUILDDIR}/Makefile.inc ; \
	  	@echo "Please enter directory where the MDCORE Potential libraries are kept:" ;\
	@read MDCORE_LIBDIR && \
	  echo "MDCORE_LIBDIR=$$MDCORE_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where MDCORE Potential include files are kept:" ; \
	  read MDCORE_INCDIR && echo "MDCORE_INCDIR=$$MDCORE_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_MDCORE=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_ASAP
	@echo
	@echo "Please enter directory where the ASAP library is kept:"
	@echo "   Default: no ASAP library present"
	@read ASAP_LIBDIR && if [[ $$ASAP_LIBDIR ]] ; then \
	  echo "ASAP_LIBDIR=$$ASAP_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_ASAP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else echo "HAVE_ASAP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_KIM
	@echo
	@echo "Please enter directory where the OpenKIM library is kept:"
	@echo "   Default: no OpenKIM support"
	@read KIM_DIR && if [[ $$KIM_DIR ]]; then \
	  echo "HAVE_KIM=1" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "KIM_DIR=$$KIM_DIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "Turn off KIM test.kim autogeneration capability (useful for OpenKIM pipeline only)? [y/n]"; \
	  echo "   Default: n"; \
	  read KIM_NO_AUTOGEN_Q && if [[ $$KIM_NO_AUTOGEN_Q == 'y' ]]; then \
	    echo "KIM_NO_AUTOGENERATE_TEST_KIM=1" >> ${BUILDDIR}/Makefile.inc ; \
	   else \
	    echo "KIM_NO_AUTOGENERATE_TEST_KIM=0" >> ${BUILDDIR}/Makefile.inc ; fi; \
	 else \
	  echo "HAVE_KIM=0" >> ${BUILDDIR}/Makefile.inc ; fi; 
endif
ifndef HAVE_CP2K
	@echo
	@echo "Do you want to compile with CP2K support? [y/n]"
	@echo "   Default: n"
	@read HAVE_CP2K_Q && if [[ $$HAVE_CP2K_Q == 'y' ]]; then \
	  echo "HAVE_CP2K=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_CP2K=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_VASP
	@echo
	@echo "Do you want to compile with VASP support? [y/n]"
	@echo "   Default: n"
	@read HAVE_VASP_Q && if [[ $$HAVE_VASP_Q == 'y' ]]; then \
	  echo "HAVE_VASP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_VASP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_TB
	@echo
	@echo "Do you want to compile with Tight Binding (TB) support? [y/n]"
	@echo "  Default: n"
	@read HAVE_TB_Q && if [[ $$HAVE_TB_Q == 'y' ]]; then \
	  echo "HAVE_TB=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_TB=0" >> ${BUILDDIR}/Makefile.inc ; fi	
endif
ifndef HAVE_FX
	@echo
	@echo "Do you want to compile with TTM3-F support? [y/n]"
	@echo "  Default: n"
	@read HAVE_FX_Q && if [[ $$HAVE_FX_Q == 'y' ]]; then \
	  echo "HAVE_FX=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_FX=0" >> ${BUILDDIR}/Makefile.inc ; fi	
endif       
ifndef HAVE_GAP
	@echo
	@echo "Do you want to compile with GAP prediction support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_GAP_Q && if [[ $$HAVE_GAP_Q == 'y' ]]; then \
	  echo "HAVE_GAP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_GAP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_GAP_FILLER
	@echo
	@echo "Do you want to compile with GAP training support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_GAP_FILLER_Q && if [[ $$HAVE_GAP_FILLER_Q == 'y' ]]; then \
	  echo "HAVE_GAP_FILLER=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_GAP_FILLER=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_QR
	@echo
	@echo "Do you want to turn on QR decomposition for some GAP operations? [y/n]"
	@echo "   Default: y"
	@read HAVE_QR_Q && if [[ $$HAVE_QR_Q == 'n' ]]; then \
	  echo "HAVE_QR=0" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_QR=1" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_LOTF
	@echo
	@echo "Do you want to compile with Learn-on-the-fly (LOTF) support? [y/n]"
	@echo "   Default: n"
	@read HAVE_LOTF_Q && if [[ $$HAVE_LOTF_Q == 'y' ]]; then \
	  echo "HAVE_LOTF=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_LOTF=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_ONIOM
	@echo
	@echo "Do you want to compile with ONIOM support? [y/n]"
	@echo "   Default: n"
	@read HAVE_ONIOM_Q && if [[ $$HAVE_ONIOM_Q == 'y' ]]; then \
	  echo "HAVE_ONIOM=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_ONIOM=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_LOCAL_E_MIX
	@echo
	@echo "Do you want to compile with LOCAL_E_MIX support? [y/n]"
	@echo "   Default: n"
	@read HAVE_LOCAL_E_MIX_Q && if [[ $$HAVE_LOCAL_E_MIX_Q == 'y' ]]; then \
	  echo "HAVE_LOCAL_E_MIX=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_LOCAL_E_MIX=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifndef HAVE_QC
	@echo
	@echo "Do you want to compile with QuasiContinuum wrapper support? [y/n]"
	@echo "   Default: n"
	@read HAVE_QC_Q && if [[ $$HAVE_QC_Q == 'y' ]]; then \
	  echo "HAVE_QC=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_QC=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif
ifeq ($(origin EXTRA_LINKOPTS), undefined)
	@echo
	@echo "Please enter any other extra linking options:"
	@echo "   Default: none"
	@read EXTRA_LINKOPTS; echo "EXTRA_LINKOPTS=$$EXTRA_LINKOPTS" >> ${BUILDDIR}/Makefile.inc
endif
ifndef HAVE_CGAL
	@echo
	@echo "Please enter directories where CGAL libraries are kept:"
	@echo "   Default: no CGAL present"
	@read CGAL_LIBDIR && if [[ $$CGAL_LIBDIR ]] ; then \
	  echo "CGAL_LIBDIR=$$CGAL_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where CGAL include files are kept:" ; \
	  read CGAL_INCDIR && echo "CGAL_INCDIR=$$CGAL_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_CGAL=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_CGAL=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif
ifndef SIZEOF_FORTRAN_T
	@/bin/bash ${QUIP_ROOT}/utility_scripts/find_sizeof_fortran_t >> ${BUILDDIR}/Makefile.inc
endif
ifndef HAVE_THIRDPARTY
	@echo "Checking for ThirdParty directory..." 
	@if [[ -d ThirdParty ]] ; then \
	  echo "   Found." ; \
	  echo "HAVE_THIRDPARTY=1" >> ${BUILDDIR}/Makefile.inc ; \
	else \
	  echo "   Not found. You may want to check it out from git@gc121mac1.eng.cam.ac.uk:ThirdParty" ; \
	  echo "HAVE_THIRDPARTY=0" >> ${BUILDDIR}/Makefile.inc ; \
	fi
endif
